# cleanup_destination - recommended to clean and recreated a clean state from template.
configuration_folders:
  platform:
    # true: force the destination folder to be deleted and re-created before the files are created.
    # false: create the target folder structure if it does not exist. On sub-sequent executions, the folder structure is reused as is.
    cleanup_destination: true
    # base destination folder where rover ignite will store the tfvars files. No / at the end
    destination_base_path: {{destination_base_path}}
    # destination relative path to destination_base_path folder where rover ignite will store the tfvars files. No / at begining and end
    destination_relative_path: {{configuration_relative_path}}


caf_terraform:
  naming_convention:
    # When set to false use the CAF provider to generate names aligned to CAF guidance
    # true: use the name as defined in the configuration files. You may have to iterate multiple times to prevent conflicts with Azure unique names with servides like storage account, keyvault or log analytics workspace.
    passthrough: false
    inherit_tags: false
    # set: define the prefix to add to all resource names
    # unset: if passthrough is set to false, generate a random prefix
    prefix: cont
    # if passthrough is set to false, add random suffix to name, up to the random_lenght value.
    random_length: 3
  launchpad:
    caf_environment: {{topology.caf_environment}}
    regions:
{% for region, location in regions.items() %}
      {{region}}: {{location}}
{% endfor %}
    default_region_key: {{topology.default_region_key}}
    # Subscription_id to deploy the launchpad. Note 1 existing manual subscription is required to deploy the launhchapd.
    subscription_id: {{subscription_id.stdout}}
    subscription_name: {{subscription_name.stdout}}
    tenant_id: {{tenant_id.stdout}}
    global_tags_propagated: yes
    tags:
      caf_deployment_mode: demo_single_subscription

  billing_subscription_role_delegations:
    # true: enable this deployment. The remaining attributes are required.
    # false: disable this deployment.
    #     azuread_user_ea_account_owner: set the upn of the user doing the manual deployment of the platform
    #     azuread_user_ea_account_owner_object_id: if that user is already loged-in to an azure cli session you can get the object_id by running:
    #         az ad signed-in-user show --query objectId -o tsv
    #     The remaining attributes are ignored: [billing_account_name, enrollment_account_name]
    enable: false
    # Azure Active Directory User (UPN) that is Account Owner in the EA portal
    # if enable=false, set the upn of the user doing the manual deployment
    azuread_user_ea_account_owner: {{topology.azuread_user_ea_account_owner}}
    # see comments above to get the object_id
    #
    # Also set this GUID to the owner of the launchpad azuread_groups
    #
    azuread_user_ea_account_owner_object_id: {{topology.ea_owner_object_id}}
    # Only set the following two attributes when enable=true
    billing_account_name: <replace>
    enrollment_account_name: <replace>


platform_core_setup:
  enable_azure_subscription_vending_machine: {{topology.enable_azure_subscription_vending_machine | lower}}
  private_lib:
    v0.3.3:
      caf_landingzone_branch: "patch.5.4.4"
    v1.1.1:
      caf_landingzone_branch: "AL-azurerm2931"
  enterprise_scale:
{% for key, value in topology.enterprise_scale.items() %}
    {{key}}:
      management_group_prefix: "{{value.management_group_prefix}}"
      management_group_name: "{{value.management_group_name}}"
      deploy_core_landing_zones: {{value.deploy_core_landing_zones | lower}}
      clean_up_destination_folder: {{value.clean_up_destination_folder | lower}}
      update_lib_folder: {{value.update_lib_folder | lower}}
      version_to_deploy: "{{value.version_to_deploy}}"
{% if value.root_parent_id is defined %}
      root_parent_id: "{{value.root_parent_id}}"
{% endif %}
{% endfor %}

subscription_deployment_mode: single_reuse

networking_topology:
  deployment_option: virtual_wan



platform_identity:
  # Set the Azure Active Directory tenant name (primary domain name)
  # has to be the default domain name (custom dns name or tenantname.onmicrosoft.com)
  # check the AAD property
  tenant_name: {{tenant_name.stdout}}
  # only service_principal supported with rover ignite at the moment
  azuread_identity_mode: {{topology.azuread_identity_mode}}
  enable_azuread_groups: {{topology.enable_azuread_groups}}
  enable_azuread_applications: {{topology.enable_azuread_applications}}
  # UPNs you want to add in the caf_platform_maintainers Azure AD group
  # Can use user or guest accounts
  # Those users will have full permissions on platform.
  # Once setup, you can remove them from here or add them from
  # Check in Azure AD the User Principal Name attribute value. Note there is a special convention for guest accounts.
  caf_platform_maintainers:
    user_principal_names:
      # - 
  caf_platform_contributors:
    user_principal_names:
      # - 

gitops:
  caf_landingzone_branch: {{topology.caf_landingzone_branch}}
  deployment_mode: interactive
  rover_log_error: ERROR
