#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name: bootstrap

on:
  pull_request_review:
    types: [submitted]

permissions:
  id-token: write
  contents: read
{% raw %}
concurrency: 
  group: ${{ github.ref }}
{% endraw %}
env:
  LZ_REPO: '{{resources.terraform_code_repository | default(topology.terraform_code_repository)}}'
  LZ_BRANCH: '{{resources.caf_landingzone_branch | default(topology.caf_landingzone_branch)}}'
  CAF_ENVIRONMENT: {{resources.caf_environment | default(caf_environment)}}

jobs:
{% raw %}
  environment:
    name: Setup dynamic environment variables
    runs-on: ubuntu-latest
    outputs:

      terraform_code_repository: ${{ steps.set_env.outputs.terraform_code_repository }}
      terraform_code_ref: ${{ steps.set_env.outputs.terraform_code_ref }}
      environment: ${{ steps.set_env.outputs.environment }}
    steps:
      - name: Set environment variables for re-usable workflows
        id: set_env
        run: |
          echo "::set-output name=terraform_code_repository::$LZ_REPO"
          echo "::set-output name=terraform_code_ref::$LZ_BRANCH"
          echo "::set-output name=environment::$CAF_ENVIRONMENT"

  generate_configuration_files:
    name: Generate configuration tfvars files
    needs: [environment]

    permissions:
      id-token: write
      contents: write
      
    uses: ./.github/workflows/generate-configuration-files.yaml
    secrets:
      BOOTSTRAP_TOKEN: ${{ secrets.BOOTSTRAP_TOKEN }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_MANAGEMENT_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      AZURE_TARGET_SUBSCRIPTION_ID: ${{ secrets.AZURE_MANAGEMENT_SUBSCRIPTION_ID }}
      RUNNER_REGISTRATION_TOKEN: ${{ secrets.RUNNER_REGISTRATION_TOKEN }}
      RUNNER_NUMBERS: ${{ secrets.RUNNER_NUMBERS }}
      AZURE_OBJECT_ID: ${{ secrets.AZURE_OBJECT_ID }}
    with:
      terraform_code_ref: ${{ needs.environment.outputs.terraform_code_ref }}
      terraform_code_repository: ${{ needs.environment.outputs.terraform_code_repository }}
      environment: ${{ needs.environment.outputs.environment }}
      generate_pr: true
      branch_name: bootstrap
      target_branch: end2end
      commit_description: Generation of configuration files for level1 and level2.

{% endraw %}