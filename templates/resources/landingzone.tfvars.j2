landingzone = {
  backend_type        = "{{ config.caf_terraform.launchpad.backend_type | default("azurerm") }}"
{% if config.tfstates['asvm'][subscription_key].level is defined %}
  {% set level = config.tfstates['asvm'][subscription_key].level %}
  level               = "{{ level }}"
{% elif resources.deployments.landingzone.key.platform.values() | first %}
  {% set level = config.tfstates['platform'][resources.deployments.landingzone.key.platform.keys() | first][resources.deployments.landingzone.key.platform.values() | first].level %}
  level               = "{{ level }}"
{% elif resources.deployments.landingzone is defined %}
  {% set level = config.tfstates['platform'][resources.deployments.landingzone.key.platform.keys() | first].level %}
  level               = "{{config.tfstates['platform'][resources.deployments.landingzone.key.platform.keys() | first].level}}"
{% else %}
  {% set level = config.tfstates['platform'][resources.deployments[subscription_key][deployment].landingzone.key.platform.keys() | first].level %}
  level               = "{{ level }}"
{% endif %}
{% if resources.deployments.landingzone.key.asvm is defined %}
{% for l_key, l_value in resources.deployments.landingzone.key.asvm.items() %}
  key                 = "{{ config.tfstates['asvm'][l_key][l_value].lz_key_name}}"
{% endfor %}
{% elif resources.deployments.landingzone.key.platform.values() | first %}
  key               = "{{ config.tfstates['platform'][resources.deployments.landingzone.key.platform.keys() | first][resources.deployments.landingzone.key.platform.values() | first].lz_key_name }}"
{% elif resources.deployments.landingzone.key.platform is defined %}
  key               = "{{config.tfstates['platform'][resources.deployments.landingzone.key.platform.keys() | first].lz_key_name}}"
{% else %}
  key               = "{{ config.tfstates['platform'][resources.deployments[subscription_key][deployment].landingzone.key.platform.keys() | first].lz_key_name }}"
{% endif %}
{% if resources.deployments.landingzone.global_settings_key.platform is defined %}
{% if resources.deployments.landingzone.global_settings_key.platform.values() | first %}
  global_settings_key               = "{{ config.tfstates['platform'][resources.deployments.landingzone.global_settings_key.platform.keys() | first][resources.deployments.landingzone.global_settings_key.platform.values() | first].lz_key_name }}"
{% else %}
  global_settings_key               = "{{ config.tfstates['platform'][resources.deployments.landingzone.global_settings_key.platform.keys() | first].lz_key_name }}"
{% endif %}
{% elif resources.deployments[subscription_key].landingzone.global_settings_key.platform is defined %}
  global_settings_key               = "{{ config.tfstates['platform'][resources.deployments[subscription_key].landingzone.global_settings_key.platform.keys() | first].lz_key_name }}"
{% elif resources.deployments[subscription_key].landingzone.global_settings_key.platform is not defined %}
{% else %}
{% for m_key, m_value in resources.deployments[subscription_key][deployment].landingzone.global_settings_key.asvm.items()  %}
  global_settings_key = "{{ config.tfstates['asvm'][m_key][m_value].lz_key_name }}"
{% endfor %}
{% endif %}
{% if resources.deployments.landingzone.remote_tfstates is defined %}
  tfstates = {
{% if resources.deployments.landingzone.remote_tfstates.asvm is defined %}
{% for a_key, a_value in resources.deployments.landingzone.remote_tfstates.asvm.items() %}
    {{ config.tfstates['asvm'][a_key][a_value].lz_key_name }} = {
      tfstate   = "{{ config.tfstates['asvm'][a_key][a_value].tfstate }}"
      workspace = "{{ config.tfstates['asvm'][a_key].workspace }}"
    }
{% endfor %}
{% endif %}
{% if resources.deployments.landingzone.remote_tfstates.platform is defined %}
{% for p_key in resources.deployments.landingzone.remote_tfstates.platform.keys() %}
{% if config.tfstates['platform'][p_key][resources.deployments.landingzone.remote_tfstates.platform[p_key]] is defined  %}
    {{ config.tfstates['platform'][p_key][resources.deployments.landingzone.remote_tfstates.platform[p_key]].lz_key_name }} = {
      {% set remote_tfstate = config.tfstates['platform'][p_key][resources.deployments.landingzone.remote_tfstates.platform[p_key]] %}
      tfstate   = "{{ remote_tfstate.tfstate }}"
      workspace = "{{ remote_tfstate.workspace | default('tfstate') }}"
{% if remote_tfstate.level != level %}
      level     = "lower"
{% endif %}
    }
{% else %}
    {{ config.tfstates['platform'][p_key].lz_key_name }} = {
      tfstate   = "{{ config.tfstates['platform'][p_key].tfstate }}"
      workspace = "{{ config.tfstates['platform'][p_key].workspace | default('tfstate') }}"
{% if config.tfstates['platform'][p_key].level != level %}
      level     = "lower"
{% endif %}
    }
{% endif %}
{% endfor %}
{% endif %}
  }
{% endif %}
}
{% if resources.deployments[subscription_key][deployment].custom_variables is defined %}
custom_variables = {
{% for cv_key, cv_value in resources.deployments[subscription_key][deployment].custom_variables.items() %}
  {{cv_key}} = "{{cv_value}}"
{% endfor %}
}
{% endif %}